{"version":3,"sources":["pages/ArcGisTrail.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["WebMapView","mapRef","useRef","useEffect","loadModules","css","then","Map","MapView","geojsonLayer","GeoJSONLayer","url","copyright","popupTemplate","title","content","fieldInfos","fieldName","format","dateFormat","renderer","type","field","symbol","color","outline","width","visualVariables","stops","value","size","map","basemap","view","container","current","center","zoom","add","Fragment","class","to","src","alt","className","style","height","ref","data-toggle","href","id","Login","basename","action","for","placeholder","setDefaultOptions","App","basnename","path","component","ArcGisTrail","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0898978c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {HashRouter, Link} from 'react-router-dom'\n\nimport { loadModules, setDefaultOptions } from 'esri-loader';\nimport Layout from '../components/Layout'\n\n// configure esri-loader to lazy load the CSS\n// the fisrt time any react-arcgis components are rendered\nsetDefaultOptions({ css: true });\n\nexport default function WebMapView() {\n    const mapRef = useRef();\n\n    useEffect(\n      () => {\n        // lazy load the required ArcGIS API for JavaScript modules and CSS\n        loadModules(['esri/Map', 'esri/views/MapView', \"esri/layers/GeoJSONLayer\"], { css: true })\n        .then(([Map, MapView, GeoJSONLayer]) => {\n\n       \tconst url = \"https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.geojson\";\n\n       \tconst template = {\n          title: \"Earthquake Info\",\n          content: \"Magnitude {mag} {type} hit {place} on {time}\",\n          fieldInfos: [\n            {\n              fieldName: \"time\",\n              format: {\n                dateFormat: \"short-date-short-time\"\n              }\n            }\n          ]\n        };\n\n        const renderer = {\n          type: \"simple\",\n          field: \"mag\",\n          symbol: {\n            type: \"simple-marker\",\n            color: [226, 119, 40],\n            outline: {\n              color: \"light-gray\",\n              width: 0.5\n            }\n          },\n          visualVariables: [\n            {\n              type: \"size\",\n              field: \"mag\",\n              stops: [\n                {\n                  value: 2.5,\n                  size: \"4px\"\n                },\n                {\n                  value: 8,\n                  size: \"40px\"\n                }\n              ]\n            }\n          ]\n        };\n\n\n        const geojsonLayer = new GeoJSONLayer({\n          url: url,\n          copyright: \"USGS Earthquakes\",\n          popupTemplate: template,\n          renderer: renderer //optional\n        });\n\n        const map = new Map({\n          basemap: \"dark-gray\",\n        });\n\n        const view = new MapView({\n          container: mapRef.current,\n          center: [78.9, 20.45],\n          zoom: 4,\n          map: map\n        });\n\n        map.add(geojsonLayer);  \n\n        // adds the layer to the map\n\n          // const map = new ArcGISMap({\n          //   basemap: 'dark-gray',\n          // });\n\n          // // load the map view at the ref's DOM node\n          // const view = new MapView({\n          //   container: mapRef.current,\n          //   map: map,\n          //   center: [18.73, 15.45],\n          //   zoom: 3\n          // });\n\n\t      // var basemapGallery = new BasemapGallery({\n\t      //   view: view,\n\t      //   source: {\n\t      //     portal: {\n\t      //       url: \"https://www.arcgis.com\",\n\t      //       useVectorBasemaps: false  // Load vector tile basemaps\n\t      //     }\n\t      //   }\n\t      // });\n\n\t      // view.ui.add(basemapGallery, \"top-right\");\n\t     //  var url = \"https://curecovid19.in/readings/readings/world_stats\"\n\t     //  const getData = async () => {\n\t     //  \tvar promise = await fetch(url).then(res=> res.json());\n\t     //  \tawait Promise.resolve(promise).then(results => {\n\t     //  \t\t  var data = results.data;\n\t     //  \t\t  console.log(data);\n\t     //  \t\t  data.forEach(element => {\n\t     //  \t\t  \t\tif(element.confirmed > 20000){\n\t\t\t   //    \t\t  \t  var point = new Point([element.lon,element.lat]);\n\t\t\t\t\t\t// \t  // var circleGeometry = new Circle(point,{\n\t\t\t\t\t\t// \t  //   \"radius\": parseInt(element.confirmed) * 1000\n\t\t\t\t\t\t// \t  // });\n\t\t\t\t\t\t// \t   var markerSymbol = {\n\t\t\t\t\t\t// \t\t  \ttype: \"simple-marker\",\n\t\t\t\t\t\t// \t        color: [226, 119, 40],  // orange\n\t\t\t\t\t\t// \t        outline: {\n\t\t\t\t\t\t// \t           color: [255, 255, 255], // white\n\t\t\t\t\t\t// \t           width: 0.5\n\t\t\t\t\t\t// \t        },\n\t\t\t\t\t\t// \t        size: parseInt(element.confirmed)/4000\n\t\t\t\t\t\t// \t\t};\n\n\t\t\t\t\t\t// \t  \tvar popupTemplate = new PopupTemplate({\n\t\t\t\t\t\t// \t\t  // autocasts as new PopupTemplate()\n\t\t\t\t\t\t// \t\t  title: \"\",\n\t\t\t\t\t\t// \t\t  content: \"<h4> Place : \" + String(element.place) + \"</h4>\"+\n\t\t\t\t\t\t// \t\t  \t\t\t\"<h6> Confirmed : \" + String(element.confirmed) + \"</h6>\"+\n\t\t\t\t\t\t// \t\t  \t\t\t\"<h6> Recovered : \" + String(element.recovered) + \"</h6>\"+\n\t\t\t\t\t\t// \t\t  \t\t\t\"<h6> Deaths : \" + String(element.deaths) + \"</h6>\"\n\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t// \t\t});\n\t\t\t\t\t\t// \t\t  var graphicsLayer = new GraphicsLayer();\n\t\t\t\t\t\t//        \t  map.add(graphicsLayer);\n\n\t\t\t\t\t\t//        \t  var pointGraphic = new Graphic({\n\t\t\t\t\t\t// \t         geometry: point,\n\t\t\t\t\t\t// \t         symbol: markerSymbol,\n\t\t\t\t\t\t// \t         popupTemplate: popupTemplate\n\t\t\t\t\t\t// \t       });\n\n\t\t\t\t\t\t//        graphicsLayer.add(pointGraphic);\n\t\t\t\t\t\t// }\n\t     //  \t\t  })\n\t      \t\t  \n\t     //  \t})\n\t     //  }\n\t     //  getData();\n\t      \n\n          return () => {\n            if (view) {\n              // destroy the map view\n              view.container = null;\n            }\n          };\n        });\n      }, []);\n\n    return (\n    \t<React.Fragment>\n    \t\t<div class=\"all-wrapper with-side-panel solid-bg-all\">\n      <div class=\"layout-w\">\n        \n        <div class=\"menu-w color-scheme-light color-style-transparent menu-position-side menu-side-left menu-layout-compact sub-menu-style-over sub-menu-color-bright selected-menu-color-light menu-activated-on-hover menu-has-selected-link\">\n          <div class=\"logo-w\">\n             <div class=\"logo-w menu-size\">\n                 <Link class=\"logo\" to=\"/map\">\n                <img src=\"./logos2.png\" alt=\"logo\" width=\"100%\"/>\n                </Link>\n          </div>\n          </div>\n\n          <h1 class=\"menu-page-header\">\n            Page Header\n          </h1>\n          <ul class=\"main-menu\">\n            <li class=\"selected\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layout\"></div>\n                </div>\n                <span>Dashboard</span></Link>\n            \n            </li>\n            <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>Web GIS Portal</span></Link>\n            </li>\n            <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>Network Tracing</span></Link>\n            </li> \n              <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>Outage Management</span></Link>\n            </li>  \n               <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>CP System</span></Link>\n            </li> \n              \n                 <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>Gas Leak Analysis</span></Link>\n            </li> \n                  <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>SAP GIS Server</span></Link>\n            </li> \n              \n                   <li class=\"\">\n              <Link to=\"/map\">\n                <div class=\"icon-w\">\n                  <div class=\"os-icon os-icon-layers\"></div>\n                </div>\n                <span>Inventory Reporting</span></Link>\n            </li>\n          \n          \n          \n        \n           \n          </ul>\n        \n        </div>\n        \n        <div class=\"content-w\">\n      \n          \n          <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\">\n              <Link to=\"/map\">Home</Link>\n            </li>\n            <li class=\"breadcrumb-item\">\n              <Link to=\"/map\">Dashboard</Link>\n            </li>\n           \n          </ul>\n          \n          <div class=\"content-i\">\n            <div class=\"content-box\">\n              \t\n              \t<div class=\"row\">\n                <div class=\"col-sm-12 col-xxxl-12\">\n                  <div class=\"element-wrapper\">\n                    <h6 class=\"element-header\">\n                      Pipeline Asset Dashboard\n                    </h6>\n                    <div class=\"element-box\">\n   \t\t\t\t\t\t<div className=\"webmap\" style={{height: \"650px\"}} ref={mapRef}></div>\n   \t\t\t\t\t</div>\n   \t\t\t\t\t</div>\n   \t\t\t\t\t</div>\n   \t\t\t\t\t</div>\n\n              <div class=\"row\">\n                <div class=\"col-sm-12 col-xxxl-12\">\n                  <div class=\"element-wrapper\">\n                    <h6 class=\"element-header\">\n                      PNG Projections\n                    </h6>\n                    <div class=\"element-box\">\n                      <div class=\"os-tabs-w\">\n                        <div class=\"os-tabs-controls\">\n                          <ul class=\"nav nav-tabs smaller\">\n                            <li class=\"nav-item\">\n                              <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#tab_overview\">PNG Penetration</a>\n                            </li>\n                            <li class=\"nav-item\">\n                              <a class=\"nav-link\" data-toggle=\"tab\" href=\"#tab_sales\">CA Wise PNG Penetration</a>\n                            </li>\n                          </ul>\n                          <ul class=\"nav nav-pills smaller d-none d-md-flex\">\n                            <li class=\"nav-item\">\n                              <a class=\"nav-link\" data-toggle=\"tab\" href=\"#\">Today</a>\n                            </li>\n                            <li class=\"nav-item\">\n                              <a class=\"nav-link active\" data-toggle=\"tab\" href=\"#\">7 Days</a>\n                            </li>\n                            <li class=\"nav-item\">\n                              <a class=\"nav-link\" data-toggle=\"tab\" href=\"#\">14 Days</a>\n                            </li>\n                            <li class=\"nav-item\">\n                              <a class=\"nav-link\" data-toggle=\"tab\" href=\"#\">Last Month</a>\n                            </li>\n                          </ul>\n                        </div>\n                        <div class=\"tab-content\">\n                          <div class=\"tab-pane active\" id=\"tab_overview\">\n                            <div class=\"el-tablo bigger\">\n                              <div class=\"label\">\n                                PNG Projection\n                              </div>\n                            </div>\n                            <div class=\"el-chart-w\">\n                              <canvas height=\"150px\" id=\"lineChart\" width=\"600px\"></canvas>\n                            </div>\n                          </div>\n                          <div class=\"tab-pane\" id=\"tab_sales\"></div>\n                          <div class=\"tab-pane\" id=\"tab_conversion\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n          \n              </div>\n \n                \n                \n                \n            </div>\n      \n          </div>\n        </div>\n      </div>\n      </div>\n    \t\t\n    \t\t\n    \t\t</React.Fragment>\n    )\n\n};","import React from 'react';\nimport {HashRouter, Link} from 'react-router-dom'\n\nexport default function Login(){\n\n\treturn (\n\t\t    <HashRouter basename=\"/\">\n\t\t    <div class=\"auth-wrapper\">\n\t\t\t<div className=\"all-wrapper menu-side with-pattern\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-6\">  \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-6\">  \n\t\t\t\t\t\t<div className=\"auth-box-w\">\n\t\t\t\t\t\t\t<div className=\"logo-w pb-4\">\n\t\t\t\t\t\t\t\t<Link to=\"/map\"><img alt=\"mngl logo\" src=\"./mngl.png\" width=\"50%\"/></Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h4 className=\"auth-header\">\n\t\t\t\t\t\t\t\tEnterprise Integrity Asset Management System at MNGL\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<form action=\"\">\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"\">Username</label><input className=\"form-control\" placeholder=\"Enter your username\" type=\"text\"/>\n\t\t\t\t\t\t\t\t\t<div className=\"pre-icon os-icon os-icon-user-male-circle\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label for=\"\">Password</label><input className=\"form-control\" placeholder=\"Enter your password\" type=\"password\"/>\n\t\t\t\t\t\t\t\t\t<div className=\"pre-icon os-icon os-icon-fingerprint\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"buttons-w\">\n\t\t\t\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" to=\"/map\">Log in</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</HashRouter>\n\n\t\t\t)}","import React from 'react';\nimport {HashRouter, Route, BrowserRouter as Router } from 'react-router-dom';\nimport ArcGisTrail from './pages/ArcGisTrail';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\n\nfunction App() {\n  return (\n\t\n\t\t<HashRouter basnename=\"/\">\n\t\t\t\t<Route path=\"/map\" component={ArcGisTrail} />\n\t\t\t\t<Route path=\"/login\" component={Login} />\n\t\t\t\t<Route exact path=\"/\" component={Login} />\n\t\t\t\t<Route exact path=\"/dashboard\" component={ArcGisTrail} />\n\t\t</HashRouter>\n\t\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}