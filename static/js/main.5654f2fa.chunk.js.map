{"version":3,"sources":["components/Header.js","components/Footer.js","components/Layout.js","pages/ArcGisTrail.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","useEffect","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","Fragment","className","to","onClick","location","src","alt","style","height","width","margin","CSSTransition","in","timeout","classNames","unmountOnExit","exact","activeStyle","color","Footer","justifyContent","href","rel","target","marginBottom","Layout","children","WebMapView","mapRef","useRef","loadModules","css","then","ArcGISMap","MapView","Point","Graphic","GraphicsLayer","PopupTemplate","map","basemap","view","container","current","center","zoom","a","fetch","res","json","promise","Promise","resolve","results","data","console","log","forEach","element","confirmed","point","lon","lat","markerSymbol","type","outline","size","parseInt","popupTemplate","title","content","String","place","recovered","deaths","graphicsLayer","add","pointGraphic","geometry","symbol","getData","ref","setDefaultOptions","App","path","component","ArcGisTrail","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5654f2fa.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Link,NavLink} from 'react-router-dom'\nimport \"./header.css\"\nimport { CSSTransition } from \"react-transition-group\";\n\nfunction Header() {\n\tconst [isNavVisible, setNavVisibility] = useState(false);\n\tconst [isSmallScreen, setIsSmallScreen] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst mediaQuery = window.matchMedia(\"(max-width: 700px)\");\n\t\tmediaQuery.addListener(handleMediaQueryChange);\n\t\thandleMediaQueryChange(mediaQuery);\n\n\t\treturn () => {\n\t\t  mediaQuery.removeListener(handleMediaQueryChange);\n\t\t};\n\t}, []);\n\n\tconst handleMediaQueryChange = mediaQuery => {\n\t\tif (mediaQuery.matches) {\n\t\t\tsetIsSmallScreen(true);\n\t\t} else {\n\t\t\tsetIsSmallScreen(false);\n\t\t}\n\t};\n\tconst style={ color:\"#000\" }\n\n\tconst toggleNav = () => {\n\t\tsetNavVisibility(!isNavVisible);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"menu-mobile menu-activated-on-click color-scheme-light\">\n\t\t\t\t<div className=\"mm-logo-buttons-w\">\n\t\t\t\t<Link className=\"mm-logo\" to=\"/\" onClick={() => window.location=\"/\"}>\n\t\t\t\t\t<img src=\"./favicon.ico\" alt=\"logo\" className=\"logo\" style={{height: \"25px\", width:\"25px\", margin: \"10px\"}}/>\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"mm-buttons\">\n\t\t\t\t<div className=\"mobile-menu-trigger\">                 \n\t\t\t\t<div onClick={toggleNav} className=\"fa fa-bars\"></div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<CSSTransition \n\t\t\t\tin={!isSmallScreen || isNavVisible}\n\t\t\t\ttimeout={350}\n\t\t\t\tclassNames=\"NavAnimation\"\n\t\t\t\tunmountOnExit>\n\t\t\t\t\t<nav className=\"Nav\">\n\t\t\t\t\t\t<NavLink to=\"/\">Home</NavLink>\n\t\t\t\t\t</nav>\n\t\t\t\t</CSSTransition>\n\t   \t\t</div>\n\n\t\t\t<div className=\"menu-w color-scheme-light fixed-top color-style-default menu-position-top menu-layout-compact sub-menu-style-over sub-menu-color-bright selected-menu-color-bright menu-activated-on-hover menu-has-selected-link\">\n\t\t\t\t<div className=\"logo-w\">\n\t\t\t\t\t<div className=\"logo-w menu-size\">\n\t\t\t\t\t\t<Link to=\"/\" className=\"logo\" onClick={() => window.location=\"/\"}>\n\t\t\t\t\t\t<img alt=\"logo\" src='./logo192.png' className=\"logo\" style={{height: \"25px\", width:\"25px\", margin: \"10px\"}}/>MNGL Dashboard\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"top-bar color-scheme-light\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<NavLink exact to=\"/\" activeStyle={style}>Home</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Header;","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className=\"invoice-footer\" style={{justifyContent: \"center\"}}>\n            <div className=\"invoice-info\" >\n                <br/> \n                <a href=\"https://vectorx.co/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                    <button className=\"btn btn-primary\" style={{width: \"100%\", marginBottom: \"10px\", color: \"white\"}} >Designed & Developed by VectorX</button>\n                </a>\n                <br/>\n            </div>\n        </div>\n    )\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nconst Layout = ({ children }) => {  \n    return (\n      <React.Fragment>\n        <Header/>\n          <main>{children}</main>\n        <Footer/>\n      </React.Fragment>\n    )\n};\n\nexport default Layout;\n","import React, { useEffect, useRef } from 'react';\nimport { loadModules, setDefaultOptions } from 'esri-loader';\nimport Layout from '../components/Layout'\n\n// configure esri-loader to lazy load the CSS\n// the fisrt time any react-arcgis components are rendered\nsetDefaultOptions({ css: true });\n\nexport default function WebMapView() {\n    const mapRef = useRef();\n\n    useEffect(\n      () => {\n        // lazy load the required ArcGIS API for JavaScript modules and CSS\n        loadModules(['esri/Map', 'esri/views/MapView', \"esri/widgets/BasemapGallery\", \"esri/geometry/Circle\", \"esri/geometry/Point\", \"esri/Graphic\",\n      \"esri/layers/GraphicsLayer\", \"esri/PopupTemplate\"], { css: true })\n        .then(([ArcGISMap, MapView, BasemapGallery, Circle, Point, Graphic, GraphicsLayer, PopupTemplate]) => {\n\n          const map = new ArcGISMap({\n            basemap: 'dark-gray',\n          });\n\n          // load the map view at the ref's DOM node\n          const view = new MapView({\n            container: mapRef.current,\n            map: map,\n            center: [18.73, 15.45],\n            zoom: 3\n          });\n\n\t      // var basemapGallery = new BasemapGallery({\n\t      //   view: view,\n\t      //   source: {\n\t      //     portal: {\n\t      //       url: \"https://www.arcgis.com\",\n\t      //       useVectorBasemaps: false  // Load vector tile basemaps\n\t      //     }\n\t      //   }\n\t      // });\n\n\t      // view.ui.add(basemapGallery, \"top-right\");\n\t      var url = \"https://curecovid19.in/readings/readings/world_stats\"\n\t      const getData = async () => {\n\t      \tvar promise = await fetch(url).then(res=> res.json());\n\t      \tawait Promise.resolve(promise).then(results => {\n\t      \t\t  var data = results.data;\n\t      \t\t  console.log(data);\n\t      \t\t  data.forEach(element => {\n\t      \t\t  \t\tif(element.confirmed > 20000){\n\t\t\t      \t\t  \t  var point = new Point([element.lon,element.lat]);\n\t\t\t\t\t\t\t  // var circleGeometry = new Circle(point,{\n\t\t\t\t\t\t\t  //   \"radius\": parseInt(element.confirmed) * 1000\n\t\t\t\t\t\t\t  // });\n\t\t\t\t\t\t\t   var markerSymbol = {\n\t\t\t\t\t\t\t\t  \ttype: \"simple-marker\",\n\t\t\t\t\t\t\t        color: [226, 119, 40],  // orange\n\t\t\t\t\t\t\t        outline: {\n\t\t\t\t\t\t\t           color: [255, 255, 255], // white\n\t\t\t\t\t\t\t           width: 0.5\n\t\t\t\t\t\t\t        },\n\t\t\t\t\t\t\t        size: parseInt(element.confirmed)/4000\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t  \tvar popupTemplate = new PopupTemplate({\n\t\t\t\t\t\t\t\t  // autocasts as new PopupTemplate()\n\t\t\t\t\t\t\t\t  title: \"\",\n\t\t\t\t\t\t\t\t  content: \"<h4> Place : \" + String(element.place) + \"</h4>\"+\n\t\t\t\t\t\t\t\t  \t\t\t\"<h6> Confirmed : \" + String(element.confirmed) + \"</h6>\"+\n\t\t\t\t\t\t\t\t  \t\t\t\"<h6> Recovered : \" + String(element.recovered) + \"</h6>\"+\n\t\t\t\t\t\t\t\t  \t\t\t\"<h6> Deaths : \" + String(element.deaths) + \"</h6>\"\n\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t  var graphicsLayer = new GraphicsLayer();\n\t\t\t\t\t\t       \t  map.add(graphicsLayer);\n\n\t\t\t\t\t\t       \t  var pointGraphic = new Graphic({\n\t\t\t\t\t\t\t         geometry: point,\n\t\t\t\t\t\t\t         symbol: markerSymbol,\n\t\t\t\t\t\t\t         popupTemplate: popupTemplate\n\t\t\t\t\t\t\t       });\n\n\t\t\t\t\t\t       graphicsLayer.add(pointGraphic);\n\t\t\t\t\t\t}\n\t      \t\t  })\n\t      \t\t  \n\t      \t})\n\t      }\n\t      getData();\n\t      \n\n          return () => {\n            if (view) {\n              // destroy the map view\n              view.container = null;\n            }\n          };\n        });\n      }, []);\n\n    return (\n    \t<Layout>\n    \t\t<div className=\"webmap\" style={{height: \"675px\"}} ref={mapRef} />\n    \t</Layout>\n    )\n\n};","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport ArcGisTrail from './pages/ArcGisTrail';\n\nfunction App() {\n  return (\n\t<div className=\"App\">\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Route path=\"/\" component={ArcGisTrail} />\n\t\t\t</div>\n\t\t</Router>\n\t</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}